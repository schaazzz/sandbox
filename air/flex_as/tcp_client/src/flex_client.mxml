<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009"
                       xmlns:s="library://ns.adobe.com/flex/spark"
                       xmlns:mx="library://ns.adobe.com/flex/mx"
					   title="Flex TCP/IP Client"
					   showStatusBar="false"
					   creationComplete="init()">
	<fx:Script><![CDATA[
		import Client;
		import mx.controls.Alert;
		
		private var tcpClient:Client;
		private var connected:Boolean = false;
		private var widgetList:Array;
		private var index:Number;
		
		private function init(): void {
			
			widgetList = new Array();
			tcpClient = new Client();
			
			widgetList.push(txtAreaDataToSend);
			widgetList.push(chkBoxSendCR);
			widgetList.push(chkBoxSendLF);
			widgetList.push(btnClearSend);
			widgetList.push(btnSend);
			widgetList.push(txtAreaRcvdData);
			widgetList.push(btnClearRcvd);
		}
		
		private function connect():void {
			var regexp:RegExp = /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/;

			if(!connected) {
				if(!regexp.test(txtInputIP.text) ||  isNaN(parseInt(txtInputPort.text))) {
					Alert.show('Invalid IP address or Port number!', 'Flex TCP Client: Error', mx.controls.Alert.CANCEL);
				}
				else {
					tcpClient.setIpAddress(txtInputIP.text);
					tcpClient.setPortNumber(txtInputPort.text);
					tcpClient.setRcvdTxtArea(txtAreaRcvdData);
					
					if(tcpClient.connect()) {
						btnConnect.label = "Disconnect";
						txtInputIP.editable = txtInputIP.enabled = false;
						txtInputPort.editable = txtInputPort.enabled = false;
						connected = true;
						
						for(index = 0; index < widgetList.length; index++) {
							widgetList[index].enabled = true;
						}
					}
					else {
						trace("connect() returned false");
					}
				}
			}
			else {
				tcpClient.disconnect();
				btnConnect.label = "Connect";
				txtInputIP.editable = txtInputIP.enabled = true;
				txtInputPort.editable = txtInputPort.enabled = true;
				connected = false;
				
				for (index = 0; index < widgetList.length; index++) {
					widgetList[index].enabled = false;
				}
			}
		}
		
		private function send():void {
			tcpClient.sendUTFBytes(txtAreaDataToSend.text);
		}
		
		private function clearSendTxt():void {
			txtAreaDataToSend.text = "";
		}
		
		private function clearRcvdTxt():void {
			txtAreaRcvdData.text = "";
		}
	]]></fx:Script>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<s:Label text="IP: " x="1" y="10" />
	<s:TextInput id="txtInputIP" text="127.0.0.1" x="20" y="5" widthInChars="10" />
	<s:Label text="Port: " x ="155" y="10" />
	<s:TextInput id="txtInputPort" text="17231" x="185" y="5" widthInChars="5" />
	<s:Button id="btnConnect" label="Connect" click="connect()" x="265" y="5" /> 
	
	<s:Label text="Data to send: " x ="1" y="40" />
	<s:TextArea id="txtAreaDataToSend" enabled="false" widthInChars="30" heightInLines="3" x="1" y="50" /> 
	<s:CheckBox id="chkBoxSendCR" label="Send CR" enabled="false" x="1" y="103" />
	<s:CheckBox id="chkBoxSendLF" label="Send LF" enabled="false" x="75" y="103" />
	<s:Button id="btnClearSend" label="Clear" click="clearSendTxt()" enabled="false" x="225" y="103" />
	<s:Button id="btnSend" label="Send" click="send()" enabled="false" x="299" y="103" />

	<s:Label text="Received data: " x ="1" y="138" />
	<s:TextArea id="txtAreaRcvdData" enabled="false" editable="false" widthInChars="30" heightInLines="10" x="1" y="148" /> 
	<s:Button id="btnClearRcvd" label="Clear" click="clearRcvdTxt()" enabled="false" x="299" y="301" />
	
</s:WindowedApplication>